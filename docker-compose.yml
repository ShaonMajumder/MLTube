version: '3.8'

services:
  php:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel-app
    container_name: php
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      Object_DETECTION_FOLDER: ${Object_DETECTION_FOLDER}
      WORKING_DIR: ${WORKING_DIR}
    working_dir: ${WORKING_DIR}
    volumes:
      - ./.env:/var/www/public_html/.env:rw
      - ./public_html:/var/www/public_html:rw
      - ./.composer:/var/www/.composer
      - ./.npm:/var/www/.npm
      - ./.config:/var/www/.config
      - ./Object-Detection-YoloV4:/var/www/Object-Detection-YoloV4
      - ./docker/app/php/local.ini:/usr/local/etc/php/conf.d/local.ini:rw
      - ./entrypoint.sh:/usr/local/bin/entrypoint.sh:rw
    entrypoint: /usr/local/bin/entrypoint.sh
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
    volumes:
      - ./public_html:/var/www/public_html
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    links:
      - php
    networks:
      - app-network

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - dbdata:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--host=${DB_HOST}", "--password=${DB_PASSWORD}", "--user=${DB_USERNAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
